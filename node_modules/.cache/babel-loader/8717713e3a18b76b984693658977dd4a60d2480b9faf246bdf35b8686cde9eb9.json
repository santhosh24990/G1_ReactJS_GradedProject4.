{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santh\\\\OneDrive\\\\Desktop\\\\project\\\\movie-manager\\\\src\\\\component\\\\favourites\\\\Favourite.tsx\",\n  _s = $RefreshSig$();\nimport \"../Intheatres/InTheatres.css\";\nimport { useState, useEffect } from \"react\";\nimport { getfavourites, removemovie } from \"../services/Movies\";\nimport { NavLink } from \"react-router-dom\";\nimport { toast } from \"react-toastify/dist/core\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Favourite = prop => {\n  _s();\n  const [movies, setmovies] = useState([]);\n  const [movie, setmovie] = useState();\n  useEffect(() => {\n    const helper = async () => {\n      const movies = await getfavourites();\n      setmovies(movies);\n    };\n    helper();\n  });\n  useEffect(() => {\n    const helper = async () => {\n      if (movie !== undefined) {\n        await removemovie(movie).then(() => {\n          toast(\"Removed successfully\");\n        });\n      }\n    };\n    helper();\n  }, [movie]);\n  const location = \"favourite\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Favourites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexbox\",\n      children: movies.filter(item => {\n        return prop.search.toLowerCase() === \"\" ? item : item.title.toLowerCase().includes(prop.search.toLowerCase());\n      }).map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imagecontainer\",\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: `${location}/${movie.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"poster\",\n            alt: \"\",\n            src: movie.posterurl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"favourites\",\n          onClick: () => {\n            setmovie(movie);\n          },\n          children: \"Remove From favourites \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 18\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n_s(Favourite, \"gzicgdJGJEYXzkhuSDS43gIoxr4=\");\n_c = Favourite;\nexport default Favourite;\nvar _c;\n$RefreshReg$(_c, \"Favourite\");","map":{"version":3,"names":["useState","useEffect","getfavourites","removemovie","NavLink","toast","jsxDEV","_jsxDEV","Favourite","prop","_s","movies","setmovies","movie","setmovie","helper","undefined","then","location","children","fileName","_jsxFileName","lineNumber","columnNumber","className","filter","item","search","toLowerCase","title","includes","map","to","id","alt","src","posterurl","onClick","_c","$RefreshReg$"],"sources":["C:/Users/santh/OneDrive/Desktop/project/movie-manager/src/component/favourites/Favourite.tsx"],"sourcesContent":["import \"../Intheatres/InTheatres.css\"\r\nimport {useState,useEffect} from \"react\"\r\nimport {getfavourites, removemovie} from \"../services/Movies\"\r\nimport Imovies from \"../../modules/Imovies\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ok } from \"assert\";\r\nimport { toast } from \"react-toastify/dist/core\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\ntype props= {\r\n  search:string\r\n}\r\n\r\nconst Favourite = (prop:props) => {\r\n    const [movies,setmovies]=useState<Imovies[]>([])\r\n    const [movie,setmovie]=useState<Imovies>()\r\n\r\n    useEffect (\r\n     \r\n      ()=>{\r\n        const helper = async ()=>{\r\n        const movies= await getfavourites();\r\n        setmovies(movies);\r\n        }\r\n        helper()\r\n      }\r\n  \r\n    );\r\n    useEffect (\r\n   \r\n      ()=>{\r\n         const helper = async ()=>{\r\n          if( movie!==undefined )\r\n          {\r\n            await removemovie(movie).then(()=>{\r\n              toast(\"Removed successfully\")\r\n            });\r\n             }\r\n            }\r\n         helper()\r\n       }\r\n   \r\n     ,[movie]); \r\n     const location=\"favourite\"\r\n    return (\r\n      <div>\r\n        <h2> Favourites</h2>\r\n        <div className=\"flexbox\">\r\n        {\r\n           \r\n           movies.filter(\r\n            item=>{\r\n              return prop.search.toLowerCase()===\"\"?item:item.title.toLowerCase().includes(prop.search.toLowerCase())\r\n            }\r\n          ).map(\r\n            movie=>(\r\n              <div key={ movie.id } className=\"imagecontainer\">\r\n                <NavLink  to={`${location}/${movie.id}`}><img className=\"poster\" alt=\"\" src={movie.posterurl} /></NavLink> \r\n                 <p>{movie.title}</p>\r\n                 <button className=\"favourites\" onClick={()=>\r\n               {\r\n                setmovie(movie)\r\n               }\r\n              } >Remove From favourites </button>\r\n  \r\n              </div>\r\n\r\n            )\r\n          )\r\n         } \r\n         \r\n        \r\n         \r\n        \r\n       </div>\r\n       </div>\r\n    );\r\n  };\r\n \r\nexport default Favourite;"],"mappings":";;AAAA,OAAO,8BAA8B;AACrC,SAAQA,QAAQ,EAACC,SAAS,QAAO,OAAO;AACxC,SAAQC,aAAa,EAAEC,WAAW,QAAO,oBAAoB;AAE7D,SAASC,OAAO,QAAQ,kBAAkB;AAE1C,SAASC,KAAK,QAAQ,0BAA0B;AAChD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO/C,MAAMC,SAAS,GAAIC,IAAU,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAACZ,QAAQ,CAAY,EAAE,CAAC;EAChD,MAAM,CAACa,KAAK,EAACC,QAAQ,CAAC,GAACd,QAAQ,EAAW;EAE1CC,SAAS,CAEP,MAAI;IACF,MAAMc,MAAM,GAAG,MAAAA,CAAA,KAAU;MACzB,MAAMJ,MAAM,GAAE,MAAMT,aAAa,EAAE;MACnCU,SAAS,CAACD,MAAM,CAAC;IACjB,CAAC;IACDI,MAAM,EAAE;EACV,CAAC,CAEF;EACDd,SAAS,CAEP,MAAI;IACD,MAAMc,MAAM,GAAG,MAAAA,CAAA,KAAU;MACxB,IAAIF,KAAK,KAAGG,SAAS,EACrB;QACE,MAAMb,WAAW,CAACU,KAAK,CAAC,CAACI,IAAI,CAAC,MAAI;UAChCZ,KAAK,CAAC,sBAAsB,CAAC;QAC/B,CAAC,CAAC;MACD;IACD,CAAC;IACJU,MAAM,EAAE;EACV,CAAC,EAEF,CAACF,KAAK,CAAC,CAAC;EACT,MAAMK,QAAQ,GAAC,WAAW;EAC3B,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACpBhB,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAL,QAAA,EAGrBR,MAAM,CAACc,MAAM,CACZC,IAAI,IAAE;QACJ,OAAOjB,IAAI,CAACkB,MAAM,CAACC,WAAW,EAAE,KAAG,EAAE,GAACF,IAAI,GAACA,IAAI,CAACG,KAAK,CAACD,WAAW,EAAE,CAACE,QAAQ,CAACrB,IAAI,CAACkB,MAAM,CAACC,WAAW,EAAE,CAAC;MACzG,CAAC,CACF,CAACG,GAAG,CACHlB,KAAK,iBACHN,OAAA;QAAsBiB,SAAS,EAAC,gBAAgB;QAAAL,QAAA,gBAC9CZ,OAAA,CAACH,OAAO;UAAE4B,EAAE,EAAG,GAAEd,QAAS,IAAGL,KAAK,CAACoB,EAAG,EAAE;UAAAd,QAAA,eAACZ,OAAA;YAAKiB,SAAS,EAAC,QAAQ;YAACU,GAAG,EAAC,EAAE;YAACC,GAAG,EAAEtB,KAAK,CAACuB;UAAU;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAU,eACzGhB,OAAA;UAAAY,QAAA,EAAIN,KAAK,CAACgB;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACpBhB,OAAA;UAAQiB,SAAS,EAAC,YAAY;UAACa,OAAO,EAAEA,CAAA,KAC1C;YACCvB,QAAQ,CAACD,KAAK,CAAC;UAChB,CACA;UAAAM,QAAA,EAAE;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA,GAPxBV,KAAK,CAACoB,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAWpB;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAME;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEX,CAAC;AAACb,EAAA,CAhEEF,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAkEf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}